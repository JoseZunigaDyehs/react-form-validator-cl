{"version":3,"sources":["lib/components/form/form-error.jsx","lib/components/form/form-input.jsx","lib/components/form/form-textarea.jsx","lib/components/form/validator.js","lib/components/form/form-select.jsx","lib/components/form/form-switch.jsx","lib/components/form/form-file.jsx","lib/components/form/form.jsx","index.js"],"names":["PropTypes","FormError","errorMsg","string","isRequired","props","react_default","a","createElement","class","FormInput","input","React","createRef","validate","_this$props","_this","name","validateFunc","current","_this2","this","_this$props2","type","placeholder","autocomplete","withError","ref","autoComplete","onKeyUp","className","content","Component","FormTextarea","rows","cssClass","required","validates","tagName","value","files","length","classList","includes","select","file","checkbox","email","emailRegEx","test","tel","text","validator","min","rules","max","cleanRut","rut","replace","toUpperCase","t","parseInt","slice","m","s","Math","floor","v","formatRut","result","substr","i","optionSelected","undefined","dataset","valor","FormSelect","state","selected","active","options","fillOptions","map","activeSelect","setState","setSelected","e","target","closest","fillOptionsShow","types","filter","item","seleccionado","retorno","forEach","push","key","data-value","onClick","cssClassError","render","FormSwitch","onChange","FormFile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","attach","attachFile","bind","assertThisInitialized","attachIconClick","deleteFile","error","enabled","event","deleteFileForm","click","size","attachFileForm","general","get","valid","el","toJS","mainCss","Error","rel","href","onClickCapture","formularioStates","disabled","Btn","BtnAttach","fillFiles","Hide","Form","isFetching","invalidFiels","buttonSend","componentWillUnmount","sendFormStart","sendFormEnd","enabledForm","disabledForm","setFiles","data","index","splice","sendForm","dataForm","url","typesValidate","arr","Validator","validateAll","fields","fieldsDOM","_loop","field","elements","getElementsByClassName","closeForm","sendDataForm","sendFunc","getElementsByTagName","lastChild","firstChild","fillError","fillErrorComponent","form_error","fillContent","legend","form_textarea_FormTextarea","form_select_FormSelect","form_switch_FormSwitch","colorHeader","form_file_FormFile","form_input_FormInput","_this$props3","distinctFieldsMsg","ReactDOM","form_Form","primaryColor","console","log","document","getElementById"],"mappings":"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","file":"static/js/main.855e8dc5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FormError = props => {\n  const { errorMsg } = props;\n  return (\n    <div class=\"error-msg\">\n      <p>{errorMsg}</p>\n    </div>\n  );\n};\n\nPropTypes.FormError = {\n  errorMsg: PropTypes.string.isRequired\n};\n\nexport default FormError;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class FormInput extends Component {\n\n  input = React.createRef()\n\n  validate = () =>{\n    const {  name,validateFunc ,validate } = this.props;\n    validateFunc(this.input.current, validate, name)\n  }\n\n  content() {\n    const { type, name, placeholder, autocomplete, withError } = this.props;\n    return (\n      <input\n        ref={this.input}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        autoComplete={autocomplete}\n        onKeyUp={()=>{this.validate()}}\n        className={withError?\" error\":\"\"}\n      />\n    );\n  }\n\n  render() {\n    return this.content();\n  }\n}\n\nFormInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  autocomplete: PropTypes.string.isRequired,\n  validateFunc: PropTypes.func.isRequired,\n  validate: PropTypes.object,\n  withError: PropTypes.bool\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class FormTextarea extends Component {\n\n  input = React.createRef();\n\n  validate = () =>{\n    const {  name,validateFunc ,validate } = this.props;\n    validateFunc(this.input.current, validate, name)\n  }\n\n  content() {\n    const { name,placeholder,autocomplete,rows, withError } = this.props;\n    let cssClass = withError?\" error\":\"\";\n    return (\n        <textarea\n        ref={this.input}\n          name={name}\n          placeholder={placeholder}\n          autoComplete={autocomplete}\n          rows={rows}\n          onKeyUp={()=>{this.validate()}}\n          className={cssClass}\n        />\n    );\n  }\n\n  render() {\n    return this.content();\n  }\n}\n\nFormTextarea.propTypes = {\n    rows: PropTypes.any.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    autocomplete: PropTypes.string.isRequired,\n    validateFunc: PropTypes.func.isRequired,\n    validate: PropTypes.object,\n    withError: PropTypes.bool,\n}\n\n","export function required(input, validates, required) {\n  //Verificar tipo de input\n  switch (input.tagName) {\n    case \"INPUT\":\n      if(input.type===\"checkbox\"){\n        return input.value !== \"off\";\n      }else if(input.type===\"file\"){\n        return input.files.length!==0;\n      }else{\n        return input.value.length !== 0;\n      }\n    case \"DIV\"://Select\n    \n      const opt = input.classList[0];\n      if(opt.includes(\"options\")){\n        return select(input, validates, required);\n      }else{\n        break;\n      }\n    case \"TEXTAREA\":\n      return !input.value.length === 0;\n    default:\n      break;\n  }\n}\n\nexport function file(input, validates, required){\n  if (required) {\n    return !input.files.length===0;\n  }\n  return true;\n}\n\nexport function checkbox(input, validates, required){\n  if (required) {\n    return !input.value === \"off\";\n  }\n  return true;\n}\n\nexport function email(input, validates, required) {\n  const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (required) {\n    return emailRegEx.test(input.value);\n  } else if (input.value.length > 0) {\n    return emailRegEx.test(input.value);\n  }\n  return true;\n}\n\nexport function tel(input, validates, required) {\n  //Si es requerido, debe pasar si o si\n  // si no que evalúe el lenght\n  if (required) {\n    const telRegEx = /^[0-9]+$/;\n    if (\n      telRegEx.test(input.value) &&\n      input.value.length >= 9 &&\n      input.value.length <= 9\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  } else if (input.value.length > 0) {\n    const telRegEx = /^[0-9]+$/;\n    if (\n      telRegEx.test(input.value) &&\n      input.value.length >= 9 &&\n      input.value.length <= 9\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function text(input, validator, required) {\n  if (required) {\n    if (input.value === \"\") return false;\n    const min = validator.rules.min,\n      max = validator.rules.max;\n    let validate = false;\n    if (input.value.length >= min && input.value.length <= max) validate = true;\n    return validate;\n  } else if (input.value.length > 0) {\n    if (input.value === \"\") return false;\n    const min = validator.rules.min,\n      max = validator.rules.max;\n    let validate = false;\n    if (input.value.length >= min && input.value.length <= max) validate = true;\n    return validate;\n  }\n  return true;\n}\n\nexport function cleanRut(rut) {\n  return typeof rut === \"string\"\n    ? rut.replace(/^0+|[^0-9kK]+/g, \"\").toUpperCase()\n    : \"\";\n}\n\nexport function rut(rut, validates, required) {\n  rut = rut.value;\n  if (required) {\n    if (typeof rut !== \"string\") {\n      return false;\n    }\n    if (!/^0*(\\d{1,3}(\\.?\\d{3})*)-?([\\dkK])$/.test(rut)) {\n      return false;\n    }\n\n    rut = cleanRut(rut);\n\n    if (rut.length > 9 || rut.length < 8) return false;\n\n    var t = parseInt(rut.slice(0, -1), 10);\n    var m = 0;\n    var s = 1;\n\n    while (t > 0) {\n      s = (s + (t % 10) * (9 - (m++ % 6))) % 11;\n      t = Math.floor(t / 10);\n    }\n\n    var v = s > 0 ? \"\" + (s - 1) : \"K\";\n    return v === rut.slice(-1);\n  } else if (rut.length > 0) {\n    if (typeof rut !== \"string\") {\n      return false;\n    }\n    if (!/^0*(\\d{1,3}(\\.?\\d{3})*)-?([\\dkK])$/.test(rut)) {\n      return false;\n    }\n\n    rut = cleanRut(rut);\n\n    if (rut.length > 9 || rut.length < 8) return false;\n\n    t = parseInt(rut.slice(0, -1), 10);\n    m = 0;\n    s = 1;\n\n    while (t > 0) {\n      s = (s + (t % 10) * (9 - (m++ % 6))) % 11;\n      t = Math.floor(t / 10);\n    }\n\n    v = s > 0 ? \"\" + (s - 1) : \"K\";\n    return v === rut.slice(-1);\n  }\n  return true;\n}\n\nexport function formatRut(rut) {\n  rut = rut.value;\n  rut = cleanRut(rut);\n\n  var result = rut.slice(-4, -1) + \"-\" + rut.substr(rut.length - 1);\n  for (var i = 4; i < rut.length; i += 3) {\n    result = rut.slice(-3 - i, -i) + \".\" + result;\n  }\n\n  return result;\n}\n\nexport function select(value, validates, required) {\n  \n  let optionSelected = value.dataset.valor===undefined?-1:value.dataset.valor;\n  if (required) {\n    return optionSelected != -1;\n  } else if (optionSelected != -1) {\n    return optionSelected != -1;\n  }\n  return true;\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class FormSelect extends Component {\n  state = {\n    selected: -1,\n    active: false\n  };\n  options = React.createRef();\n\n  fillOptions = options => {\n    return options.map((map, i) => {\n      return <option value={map.value}>{map.text}</option>;\n    });\n  };\n  activeSelect = () => {\n    \n    this.setState({\n      active: !this.state.active\n    });\n  };\n\n  setSelected = (validate, name, validateFunc, e) => {\n    \n    let selected = e.target.dataset.value;\n    this.options.current.dataset.valor = selected;\n    validateFunc(e.target.closest(\".options\"),validate, name);\n    this.setState({\n      selected,\n      active: false\n    });\n  };\n\n  fillOptionsShow = options => {\n    \n    const { validateFunc, validate, name } = this.props,\n      required = validate.types.filter(item => item === \"required\"),\n      seleccionado = this.state.selected;\n    let retorno = [];\n    options.forEach((map, i) => {\n      if (seleccionado == map.value) {\n        //SELECCIONADO\n        retorno.push(\n          <div key={i} data-value={map.value} onClick={()=>{this.activeSelect()}}>\n            {map.text}\n          </div>\n        );\n      }\n    });\n    options.forEach((map, i) => {\n      if (required.length === 0) {\n        //NO REQUERIDO\n        if (seleccionado == map.value) {\n          // si esta seleccionado y no es el seleccione\n          retorno.push(\n            <div\n              data-value={map.value}\n              key={i + map.text}\n              onClick={(e)=>{this.activeSelect(e)}}\n              className=\"disabled\"\n            >\n              {map.text}\n            </div>\n          );\n        } else {\n          // si es otro\n          retorno.push(\n            <div\n              data-value={map.value}\n              key={i + map.text}\n              onClick={(e)=>{this.setSelected(\n                validate,\n                name,\n                validateFunc,\n                e,\n              )}}\n            >\n              {map.text}\n            </div>\n          );\n        }\n      } else {\n        //SI ES REQUERIDO\n        if (seleccionado == map.value && map.value !== -1) {\n          // si esta seleccionado y no es el seleccione\n          retorno.push(\n            <div\n              data-value={map.value}\n              key={i + map.text}\n              onClick={(e)=>{this.activeSelect(e)}}\n              className=\"disabled\"\n            >\n              {map.text}\n            </div>\n          );\n        } else if (map.value == -1) {\n          return null;\n        } else {\n          // si es otro\n          retorno.push(\n            <div\n              data-value={map.value}\n              key={i + map.text}\n              onClick={(e)=>{this.setSelected(\n                validate,\n                name,\n                validateFunc,\n                e\n              )}}\n            >\n              {map.text}\n            </div>\n          );\n        }\n      }\n    });\n\n    return retorno;\n  };\n\n  content = () => {\n    const { options, withError } = this.props;\n    let cssClass = this.state.active ? \" active\" : \"\",\n      cssClassError = withError ? \" error\" : \"\";\n    return (\n      <div className=\"select\">\n        <div\n          className={\"options\" + cssClass + cssClassError}\n          ref={this.options}\n        >\n          {this.fillOptionsShow(options)}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    return this.content();\n  };\n}\n\nFormSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  options: PropTypes.any.isRequired,\n  validateFunc: PropTypes.func.isRequired,\n  validate: PropTypes.object,\n  withError: PropTypes.bool,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class FormSwitch extends Component {\n\n  input = React.createRef()\n  \n  validate = () =>{\n    const {  name,validateFunc ,validate } = this.props;\n    validateFunc(this.input.current, validate, name)\n  }\n\n  content() {\n    const { name, validateFunc, validate, withError } = this.props;\n    return (\n      <label className=\"switch\">\n        <strong>NO</strong>\n        <input\n        ref={this.input}\n          type=\"checkbox\"\n          className={withError?\" error\":\"\"}\n          name={name}\n          onChange={()=>{this.validate()}}\n        />\n        <span className={\"slider round\"} />\n        <strong>SI</strong>\n      </label>\n    );\n  }\n\n  render() {\n    return this.content();\n  }\n}\n\nFormSwitch.propTypes = {\n  name: PropTypes.string.isRequired,\n  validateFunc: PropTypes.func.isRequired,\n  validate: PropTypes.object,\n  withError: PropTypes.bool,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class FormFile extends Component {\n  constructor(props) {\n    super(props);\n    this.attach = React.createRef();\n    this.attachFile = this.attachFile.bind(this);\n    this.attachIconClick = this.attachIconClick.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.state = {\n      error: null,\n      enabled: true\n    };\n  }\n\n  deleteFile(i, event) {\n    const { deleteFileForm } = this.props;\n    deleteFileForm(i);\n  }\n\n  attachIconClick() {\n    this.attach.current.click();\n  }\n\n  attachFile() {\n    const size = this.attach.current.files[0].size,\n      { attachFileForm, general, attach } = this.props;\n    if (size > 0 && size <= attach.get(\"maxSize\")) {\n      const file = this.attach.current.files[0],\n        type = file.type,\n        types = attach.get(\"types\");\n      let valid = false;\n      types.forEach(el => {\n        if (el === type) valid = true;\n      });\n      if (valid) {\n        let item = {};\n        item.file = file;\n        item.general = general.toJS();\n        attachFileForm(item);\n        this.setState({\n          error: null,\n          enabled: false\n        });\n      } else {\n        this.setState({\n          error: \"No hay mano\"\n        });\n      }\n    } else {\n      this.setState({\n        error: \"Excede el máximo permitido\"\n      });\n    }\n  }\n\n  fillError() {\n    if (this.state.error !== null) {\n      const { mainCss } = this.props;\n      return <p className={mainCss.Error}>{this.state.error}</p>;\n    }\n  }\n\n  fillFiles(files) {\n    let retorno = files.map((map, i) => {\n      return (\n        <li key={i}>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={map.get(\"url\")}>\n            {map.get(\"name\")}\n          </a>\n          <i\n            onClickCapture={this.deleteFile.bind(this, i)}\n            className=\"fas fa-times\"\n          />\n        </li>\n      );\n    });\n    return <ul>{retorno}</ul>;\n  }\n\n  content() {\n    const { type, name, formularioStates, mainCss } = this.props,\n      files = formularioStates.get(\"files\");\n    let cssClass = this.state.error ? \" \"+mainCss.Error : \"\";\n    if (files && files.size > 0) {\n      return (\n        <div>\n          <input\n            type={type}\n            ref={this.attach}\n            className=\"hide\"\n            name={name}\n            onChange={this.attachFile}\n          />\n          <button\n            disabled={this.state.enabled}\n            type=\"button\"\n            onClick={this.attachIconClick}\n            className={mainCss.Btn + \" \" + mainCss.BtnAttach+cssClass}\n          >\n            Adjuntar\n            <i className=\"fas fa-paperclip\" />\n          </button>\n          {this.fillFiles(files)}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <input\n            type={type}\n            ref={this.attach}\n            className={mainCss.Hide}\n            name={name}\n            onChange={this.attachFile}\n          />\n          <button\n            type=\"button\"\n            onClick={this.attachIconClick}\n            className={mainCss.Btn + \" \" + mainCss.BtnAttach+cssClass}\n          >\n            Adjuntar\n            <i className=\"fas fa-paperclip\" />\n          </button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return this.content();\n  }\n}\n\nFormFile.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  validateFunc: PropTypes.func.isRequired,\n  validate: PropTypes.object,\n  withError: PropTypes.bool,\n  mainCss: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport \"../../assets/styles.css\";\nimport FormError from \"./form-error\";\nimport FormInput from \"./form-input\";\nimport FormTextarea from \"./form-textarea\";\nimport * as Validator from \"./validator\";\nimport FormSelect from \"./form-select\";\nimport FormSwitch from \"./form-switch\";\nimport FormFile from \"./form-file\";\n\n// import { form } from \"../../data\"\n\nexport default class Form extends Component {\n  //CONSTRUCTOR\n  state = {\n    enabled: false,\n    error: false,\n    isFetching: false,\n    files: [],\n    invalidFiels: [],\n    validate: false\n  };\n  buttonSend = React.createRef();\n\n  //LIFECYCLE\n  componentWillUnmount = () => {\n    this.state.setState({\n      invalidFiels: [],\n      validate: false,\n      error: false,\n      isFetching: false\n    });\n  };\n\n  //ACTIONS\n  sendFormStart = () => {\n    this.state.setState({\n      isFetching: true\n    });\n  };\n\n  sendFormEnd = () => {\n    this.state.setState({\n      isFetching: false\n    });\n  };\n\n  enabledForm = () => {\n    this.state.setState({\n      enabled: true\n    });\n  };\n\n  disabledForm = () => {\n    this.state.setState({\n      enabled: false\n    });\n  };\n\n  setFiles = data => {\n    const files = this.state;\n    this.state.setState({\n      files: files.push(data)\n    });\n  };\n\n  deleteFile = index => {\n    const files = this.state;\n    this.state.setState({\n      files: files.splice(index, 1)\n    });\n  };\n\n  sendForm = (dataForm, url) => {};\n\n  //HANDLES\n  validate = (e, validates, name) => {\n    const typesValidate = validates.types;\n    let error = false,\n      input = e.target === undefined ? e : e.target,\n      arr = this.state.invalidFiels;\n    arr = arr.filter(item => item !== name);\n    let required = typesValidate.filter(item => item === \"required\");\n    required = required.length > 0;\n    typesValidate.forEach(map => {\n      if (!Validator[map](input, validates, required)) error = true;\n    });\n    if (error) {\n      arr.push(name);\n    }\n    this.setState({\n      invalidFiels: arr\n    });\n  };\n\n  validateAll = (fields, fieldsDOM) => {\n    let arr = [];\n    for (let i = 0; i < fieldsDOM.length; i++) {\n      const map = fieldsDOM[i],\n        field = fields[i],\n        name = field.name,\n        validates = field.validate,\n        typesValidate = validates.types;\n      let input = map.elements[0],\n        error = false,\n        required = typesValidate.filter(item => item === \"required\");\n\n      required = required.length > 0;\n\n      input =\n        input !== undefined ? input : map.getElementsByClassName(\"options\")[0];\n\n      arr = arr.filter(item => item !== name);\n      typesValidate.forEach(map => {\n        if (!Validator[map](input, validates, required)) error = true;\n      });\n\n      if (error) {\n        arr.push(name);\n      }\n    }\n    return arr;\n  };\n\n  closeForm = () => {\n    this.state.setState({\n      enabled: false\n    });\n  };\n\n  sendDataForm = () => {\n    const { sendFunc, fields } = this.props,\n    { buttonSend } = this,\n    fieldsDOM = buttonSend.current\n    .closest(\"form\")\n    .getElementsByTagName(\"fieldset\"),\n    arr = this.validateAll(fields, fieldsDOM);\n    let dataForm = {};\n    if (arr.length > 0) {\n      this.setState({\n        invalidFiels: arr\n      });\n    } else {\n      for (let i = 0; i < fieldsDOM.length; i++) {\n        \n        let input = fieldsDOM[i].elements[0],\n        value = \"\",\n        name = \"\";\n        if(input!==undefined){\n          value = input.value;\n          name = input.name;\n        }else{\n          value = fieldsDOM[i].lastChild.firstChild.dataset.valor;\n          name = \"opciones\";\n        }\n        dataForm[name] = value;\n      }\n      sendFunc(dataForm);\n    }\n  };\n\n  //RENDER\n\n  fillError = (withError, error) => {\n    return withError ? (\n      <p>\n        <small className=\"error\">{error}</small>\n      </p>\n    ) : null;\n  };\n\n  fillErrorComponent = () => {\n    return this.state.error ? (\n      <FormError errorMsg={this.props.errorMsg} />\n    ) : null;\n  };\n\n  fillContent = fields => {\n    if (fields.length > 0) {\n      const retorno = [];\n      fields.forEach((map, i) => {\n        const withError = this.state.invalidFiels.includes(map.name);\n        switch (map.type) {\n          case \"textarea\":\n            retorno.push(\n              <fieldset key={i + map.name}>\n                <legend>{map.legend}</legend>\n                <FormTextarea\n                  rows={map.rows}\n                  name={map.name}\n                  placeholder={map.placeholder}\n                  autocomplete={map.autocomplete}\n                  validateFunc={this.validate}\n                  validate={map.validate}\n                  withError={withError}\n                />\n                {this.fillError(withError, map.validate.error)}\n              </fieldset>\n            );\n            break;\n          case \"select\":\n            retorno.push(\n              <fieldset key={i + map.name}>\n                <legend>{map.legend}</legend>\n                <FormSelect\n                  name={map.name}\n                  validateFunc={this.validate}\n                  validate={map.validate}\n                  withError={withError}\n                  options={map.options}\n                />\n                {this.fillError(withError, map.validate.error)}\n              </fieldset>\n            );\n            break;\n          case \"checkbox\":\n            retorno.push(\n              <fieldset key={i + map.name}>\n                <legend>{map.legend}</legend>\n                <FormSwitch\n                  name={map.name}\n                  validateFunc={this.validate}\n                  validate={map.validate}\n                  withError={withError}\n                />\n                {this.fillError(withError, map.validate.error)}\n              </fieldset>\n            );\n            break;\n          case \"file\":\n            const {\n              attachFileForm,\n              formularioStates,\n              general,\n              colorHeader,\n              deleteFileForm\n            } = this.props;\n            retorno.push(\n              <fieldset key={i + map.name}>\n                <legend>{map.legend}</legend>\n                <FormFile\n                  validateFunc={this.validate}\n                  validate={map.validate}\n                  withError={withError}\n                  general={general}\n                  attachFileForm={attachFileForm}\n                  colorHeader={colorHeader}\n                  type={map.type}\n                  name={map.name}\n                  formularioStates={formularioStates}\n                  deleteFileForm={deleteFileForm}\n                  attach={map.validate.rules}\n                />\n                {this.fillError(withError, map.validate.error)}\n              </fieldset>\n            );\n            break;\n          default:\n            retorno.push(\n              <fieldset key={i + map.name}>\n                <legend>{map.legend}</legend>\n                <FormInput\n                  type={map.type}\n                  name={map.name}\n                  placeholder={map.placeholder}\n                  autocomplete={map.autocomplete}\n                  validate={map.validate}\n                  withError={withError}\n                  validateFunc={this.validate}\n                />\n                {this.fillError(withError, map.validate.error)}\n              </fieldset>\n            );\n            break;\n        }\n      });\n      return retorno;\n    } else {\n      return null;\n    }\n  };\n\n  content = () => {\n    const { fields, distinctFieldsMsg, autoComplete } = this.props;\n    return (\n      <div className={\"form-container \"}>\n        <div className=\"container-form\">\n          <form autoComplete={autoComplete}>\n            <div className=\"header-form\" />\n            <p className=\"red\">{distinctFieldsMsg}</p>\n            {this.fillContent(fields)}\n            <button\n              type=\"button\"\n              ref={this.buttonSend}\n              onClick={() => {\n                this.sendDataForm();\n              }}\n              className=\"button-send\"\n            >\n              Enviar\n            </button>\n          </form>\n          {this.fillErrorComponent()}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    debugger\n    return this.content();\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Form from \"./lib/components/form/form\";\nconst fields = [\n  {\n    legend: \"Nombre*\",\n    type: \"text\",\n    name: \"nombre\",\n    placeholder: \"Ej. Juan\",\n    autocomplete: \"off\",\n    validate: {\n      types: [\"required\", \"text\"],\n      rules: { min: 3, max: 10 },\n      error: \"Debes completar el nombre (mínimo 3, máximo 10)\"\n    }\n  },\n  {\n    legend: \"Rut*\",\n    type: \"text\",\n    name: \"rut\",\n    placeholder: \"Ej. 11111111-1\",\n    autocomplete: \"off\",\n    validate: {\n      types: [\"required\", \"rut\"],\n      error: \"Debes ingresar un rut válido\"\n    }\n  },\n  {\n    legend: \"Teléfono\",\n    type: \"tel\",\n    name: \"telefono\",\n    placeholder: \"Ej. 912345678\",\n    autocomplete: \"off\",\n    validate: {\n      types: [\"tel\"],\n      error: \"Debes ingresar un teléfono válido\"\n    }\n  },\n  {\n    legend: \"Correo electrónico*\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Ej. nombre@micorreo.cl\",\n    autocomplete: \"off\",\n    validate: {\n      types: [\"required\", \"email\"],\n      error: \"Debes ingresar un correo electrónico válido\"\n    }\n  },\n  {\n    legend: \"Switch*\",\n    type: \"checkbox\",\n    name: \"switch\",\n    validate: {\n      types: [\"checkbox\"],\n      error: \"Debes seleccionar el checkbox\"\n    }\n  },\n  {\n    legend: \"Select prueba\",\n    type: \"select\",\n    name: \"opciones\",\n    options: [\n      { text: \"Seleccione\", value: -1 },\n      { text: \"Opcion #1\", value: 1 },\n      { text: \"Opcion #2\", value: 2 },\n      { text: \"Opcion #3\", value: 3 }\n    ],\n    validate: {\n      types: [\"required\", \"select\"],\n      error: \"Debes seleccionar una opción\"\n    }\n  },\n  {\n    legend: \"Comentario\",\n    type: \"textarea\",\n    name: \"comentario\",\n    placeholder: \"Escriba aquí su comentario\",\n    autocomplete: \"off\",\n    rows: 5,\n    validate: {\n      types: [\"text\"],\n      rules: { min: 3, max: 150 },\n      error: \"Debes completar el nombre (mínimo 3, máximo 150)\"\n    }\n  }\n];\nconst sendFunc = dataForm => {\n  console.log(dataForm);\n  return true;\n};\n\nReactDOM.render(\n  <Form\n    primaryColor=\"red\"\n    distinctFieldsMsg={\"Campos obligatorios (*)\"}\n    autoComplete={\"off\"}\n    fields={fields}\n    sendFunc={sendFunc}\n    errorMsg={\"ERRORORRO\"}\n    error={false}\n  />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}